Ejecutable como documento HTML5
    con autor allnulled
    con nombre index
    con versión 1
<head>
    <title>Castelog OS</title>
    <meta charset="utf8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" type="text/css" href="lib/win7/win7.scoped.2.css" />
    <link rel="stylesheet" type="text/css" href="lib/codemirror/codemirror.css" />
    <link rel="stylesheet" type="text/css" href="lib/theme/theme.css" />
    <script src="lib/calo/calo.js"></script>
    <script src="lib/calo/castelog.parser.js"></script>
    <script src="lib/codemirror/codemirror.js"></script>
    <script src="lib/components/pagina_de_inicio/pagina_de_inicio.js"></script>
    <script src="lib/components/pagina_de_ficheros/pagina_de_ficheros.js"></script>
    <script src="lib/components/pagina_de_fichero/pagina_de_fichero.js"></script>
    <script src="lib/components/pagina_de_consola/pagina_de_consola.js"></script>
</head>
<body><div id="app"></div></body>.


creo App como una aplicación vue2 con nombre "App" con rutas [{
  propiedad path como "/consola".
  propiedad name como "PaginaDeConsola".
  propiedad component como window.PaginaDeConsola.
  propiedad props como {}.
}, {
  propiedad path como "/ficheros".
  propiedad name como "PaginaDeFicheros".
  propiedad component como window.PaginaDeFicheros.
  propiedad props como {}.
}, {
  propiedad path como "/fichero".
  propiedad name como "PaginaDeFichero".
  propiedad component como window.PaginaDeFichero.
  propiedad props como {}.
}, {
  propiedad path como "/".
  propiedad name como "PaginaDeInicio".
  propiedad component como window.PaginaDeInicio.
  propiedad props como {}.
}] con traducciones {
  propiedad es como {}.
  propiedad en como {}.
  propiedad ca como {}.
} con plantilla {
  <div class="App Component Castelog-app win7">
    <router-view :root="this"></router-view>
    <div v-if="error">
      <div>Nombre: {{ error.name }}</div>
      <div>Mensaje: {{ error.message }}</div>
      <div>Pila: {{ error.stack }}</div>
    </div>
  </div>
} con estilos {
    html {}
    body {}
    .Component {}
    .App {}
} con lógica {
  retorno {
    método data donde {
      retorno {
        error_id: undefined,
        error: undefined
      }.
    }.
    propiedad methods como {
      método asíncrono mostrar_error con (error, tiempo o en su defecto 10 * 1000) donde {
        asigno this.error como error.
        hago this.$forceUpdate(true).
        hago clearTimeout(this.error_id).
        asigno this.error_id como setTimeout(una lambda donde {
          asigno this.error como undefined.
          hago this.$forceUpdate(true).
        }, tiempo).
      }.
      método asíncrono gestionar_error con (error) donde {
        imprimo error.
        hago this.mostrar_error(error, 10 * 1000).
      } en errores imprimo error.
    }.
    propiedad watch como {}.
    método beforeMount donde {}.
    método mounted donde {}.
  }.
} montada en "#app".