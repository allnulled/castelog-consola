asigno window.PaginaDeConsola como un componente vue2 con nombre "PaginaDeConsola" con plantilla {
  <div class="PaginaDeConsola Component">
    <h5>
      <router-link to="/">Inicio</router-link> » <span>Consola</span>
    </h5>
    <div id="consola_de_castelog">
      <textarea ref="consola_de_castelog"></textarea>
    </div>
    <table>
      <tr>
        <td style="width: 100%;">
          <button style="width: 100%;" v-on:click="() => ejecutar_codigo_castelog()">Ejecutar</button>
        </td>
        <td style="width: 1%;">
          <button v-on:click="() => guardar_codigo_castelog()">Guardar</button>
        </td>
      </tr>
    </table>
    <div id="consola_de_salida">
      <textarea ref="consola_de_salida"></textarea>
    </div>
  </div>
} con lógica {
  retorno {
    propiedad props como {
      propiedad root como {
        propiedad type como Object.
        propiedad required como true.
      }.
    }.
    método data donde {
      retorno {
        consola_entrada_codemirror: undefined,
        consola_salida_codemirror: undefined
      }.
    }.
    propiedad methods como {
      método asíncrono ejecutar_codigo_castelog donde {
        creo codigo_castelog como this.consola_entrada_codemirror.getValue().
        creo codigo_js como this.$window.Castelog_parser.parse(codigo_castelog).
        creo resultado como asíncronamente this.$window.eval("(async () => {const __dirname = process.cwd();" + codigo_js + "})()").
        creo resultado_json como JSON.stringify(resultado, null, 4).
        hago this.consola_salida_codemirror.setValue(resultado_json).
      } en errores hago this.root.gestionar_error(error).
      método asíncrono guardar_codigo_castelog donde {

      } en errores hago this.root.gestionar_error(error).
    }.
    método mounted donde {
      asigno this.consola_entrada_codemirror como CodeMirror.fromTextArea(this.$refs.consola_de_castelog, { lineNumbers: true }).
      asigno this.consola_salida_codemirror como CodeMirror.fromTextArea(this.$refs.consola_de_salida, { lineNumbers: true }).
    }.
  }.
}.
